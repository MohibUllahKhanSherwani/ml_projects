# -*- coding: utf-8 -*-
"""heart disease prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DZ_mZXAON6zM0CDVff5Q24PEKJEcyNxX
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

heart_data = pd.read_csv('/content/heart_disease_data.csv')

heart_data.head()

heart_data.tail()

heart_data.shape

heart_data.describe()

heart_data.info()

heart_data.isnull().sum()

correlation = heart_data.corr()
plt.figure(figsize=(10,10))
sns.heatmap(correlation, cbar = True, square = False, fmt = '.1f', annot = True
            , annot_kws={'size':8}, cmap='Blues')
plt.show()

plt.figure(figsize=(5,5))
sns.barplot(x='target', data=heart_data, y= 'age')
plt.show()

plt.figure(figsize=(10,5))
sns.barplot(x='target', data=heart_data, y = 'sex')
plt.show()

#Checking distributions
heart_data['target'].value_counts()

"""1 --> People Have heart disease
2 --> Dont have heart disease
"""

x = heart_data.drop('target', axis = 1)
y = heart_data['target']

print(x)

print(y)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2,
                                                    stratify = y,
                                                    random_state=2)

print(x.shape, x_train.shape, x_test.shape)

model = LogisticRegression()

#Test the model
model.fit(x_train, y_train)

#Evaluate the accuracy
train_prediction = model.predict(x_train)
train_accuracy = accuracy_score(train_prediction, y_train)
print('Accuracy on training data: ', train_accuracy)

test_prediction = model.predict(x_test)
test_accuracy = accuracy_score(test_prediction, y_test)
print('Accuracy on test data: ', test_accuracy)

input_data = (37,1,2,130,250,0,1,187,0,3.5,0,0,2)
input_data = np.asarray(input_data)
input_data = input_data.reshape(1, -1)
prediction = model.predict(input_data)
print(prediction)
if (prediction[0] == 0):
  print('Person has heart disease')
else:
  print('Person doesn\'t have heart disease')

