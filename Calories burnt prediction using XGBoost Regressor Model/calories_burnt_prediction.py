# -*- coding: utf-8 -*-
"""Calories burnt prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14-d4O6LVNBZgRKDBiCs0TyCfVEdFj52r
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics

calories = pd.read_csv('/content/calories.csv')
exercise = pd.read_csv('/content/exercise.csv')

calories.head()

exercise.head()

exercise.shape

calories.shape

exercise.isnull().sum()

calories.isnull().sum()

df = pd.concat([exercise, calories['Calories']], axis = 1)

df

sns.countplot(x = df['Gender'])

z = df.drop('Gender', axis = 1)
correlation = z.corr()
plt.figure(figsize = (10, 10))
sns.heatmap(correlation, annot = True, cbar = True, cmap = 'Greens', square = True,
            annot_kws={'size':8}, fmt = '.1f')

df.replace({'Gender': {'male': 0, 'female': 1}}, inplace = True)

df

df['Gender'].value_counts()

x = df.drop(columns = ['Calories', 'User_ID'], axis = 1)
y = df['Calories']

x

y

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 2)

print(x.shape, x_train.shape, x_test.shape)

model = XGBRegressor()

model.fit(x_train, y_train)

test_prediction = model.predict(x_test)

error = metrics.mean_absolute_error(y_test, test_prediction)
print('Error score: ', error)

train_prediction = model.predict(x_train)
error = metrics.mean_absolute_error(y_train, train_prediction)
print('Error score: ', error)

